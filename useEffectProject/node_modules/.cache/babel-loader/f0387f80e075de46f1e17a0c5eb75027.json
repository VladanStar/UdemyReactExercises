{"ast":null,"code":"var _jsxFileName = \"D:\\\\Download\\\\BIT\\\\UdemyReactExercises\\\\useEffectProject\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    setFormIsValid(enteredEmail.includes('@') && enteredPassword.trim().length > 6);\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value);\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBblur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Login, \"LXbrkIlmixekYK8sfxwnk7twvaE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/Download/BIT/UdemyReactExercises/useEffectProject/src/components/Login/Login.js"],"names":["React","useState","useEffect","Card","classes","Button","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","includes","trim","length","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AAEnB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,EAAhD;AACA,QAAM,CAACW,eAAD,EAAkBC,kBAAlB,IAAwCZ,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACa,eAAD,EAAkBC,kBAAlB,IAAwCd,QAAQ,EAAtD;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,KAAD,CAA9C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,cAAc,CACVT,YAAY,CAACU,QAAb,CAAsB,GAAtB,KAA8BN,eAAe,CAACO,IAAhB,GAAuBC,MAAvB,GAAgC,CADpD,CAAd;AAGH,GAJQ,EAIN,CAACZ,YAAD,EAAeI,eAAf,CAJM,CAAT;;AAMA,QAAMS,kBAAkB,GAAIC,KAAD,IAAW;AAClCb,IAAAA,eAAe,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH,GAFD;;AAGA,QAAMC,qBAAqB,GAAIH,KAAD,IAAW;AACrCT,IAAAA,kBAAkB,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACH,GAFD;;AAGA,QAAME,oBAAoB,GAAG,MAAM;AAC/Bf,IAAAA,eAAe,CAACH,YAAY,CAACU,QAAb,CAAsB,GAAtB,CAAD,CAAf;AACH,GAFD;;AAIA,QAAMS,uBAAuB,GAAG,MAAM;AAClCZ,IAAAA,kBAAkB,CAACH,eAAe,CAACO,IAAhB,GAAuBC,MAAvB,GAAgC,CAAjC,CAAlB;AACH,GAFD;;AAIA,QAAMQ,aAAa,GAAIN,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACO,cAAN;AACAtB,IAAAA,KAAK,CAACuB,OAAN,CAActB,YAAd,EAA4BI,eAA5B;AACH,GAHD;;AAIF,sBACI,QAAC,IAAD;AAAM,IAAA,SAAS,EAAER,OAAO,CAAC2B,KAAzB;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAEH,aAAhB;AAAA,8BACI;AACI,QAAA,SAAS,EAAG,GAAExB,OAAO,CAAC4B,OAAQ,IAAGtB,YAAY,KAAK,KAAjB,GAAyBN,OAAO,CAAC6B,OAAjC,GAA2C,EAAG,EADnF;AAAA,gCAEI;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AACI,UAAA,IAAI,EAAC,OADT;AAEI,UAAA,EAAE,EAAC,OAFP;AAGI,UAAA,KAAK,EAAEzB,YAHX;AAII,UAAA,QAAQ,EAAEa,kBAJd;AAKI,UAAA,OAAO,EAAGK;AALd;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAYI;AAAK,QAAA,SAAS,EAAG,GAAEtB,OAAO,CAAC4B,OAAQ,IAAGlB,eAAe,KAAK,KAApB,GAA4BV,OAAO,CAAC6B,OAApC,GAA8C,EAAG,EAAvF;AAAA,gCAGI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,EAAE,EAAC,UAFP;AAGI,UAAA,KAAK,EAAErB,eAHX;AAII,UAAA,QAAQ,EAAEa,qBAJd;AAKI,UAAA,MAAM,EAAEE;AALZ;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAwBI;AAAK,QAAA,SAAS,EAAEvB,OAAO,CAAC8B,OAAxB;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAE9B,OAAO,CAAC+B,GAAzC;AAA8C,UAAA,QAAQ,EAAE,CAACnB,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmCD,CAnED;;GAAMV,K;;KAAAA,K;AAqEN,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport Card from \"../UI/Card/Card\";\r\nimport classes from \"./Login.module.css\";\r\nimport Button from \"../UI/Button/Button\";\r\n\r\nconst Login = props => {\r\n\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n    const [emailIsValid, setEmailIsValid] = useState();\r\n    const [enteredPassword, setEnteredPassword] = useState('');\r\n    const [passwordIsValid, setPasswordIsValid] = useState();\r\n    const [formIsValid, setFormIsValid] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setFormIsValid(\r\n            enteredEmail.includes('@') && enteredPassword.trim().length > 6\r\n        );\r\n    }, [enteredEmail, enteredPassword]);\r\n\r\n    const emailChangeHandler = (event) => {\r\n        setEnteredEmail(event.target.value);\r\n    }\r\n    const passwordChangeHandler = (event) => {\r\n        setEnteredPassword(event.target.value);\r\n    }\r\n    const validateEmailHandler = () => {\r\n        setEmailIsValid(enteredEmail.includes('@'));\r\n    };\r\n\r\n    const validatePasswordHandler = () => {\r\n        setPasswordIsValid(enteredPassword.trim().length > 6);\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n        props.onLogin(enteredEmail, enteredPassword);\r\n    };\r\n  return (\r\n      <Card className={classes.login}>\r\n          <form onSubmit={submitHandler}>\r\n              <div\r\n                  className={`${classes.control} ${emailIsValid === false ? classes.invalid : ''}`}>\r\n                  <label htmlFor='email'>E-Mail</label>\r\n                  <input\r\n                      type=\"email\"\r\n                      id=\"email\"\r\n                      value={enteredEmail}\r\n                      onChange={emailChangeHandler}\r\n                      onBblur ={validateEmailHandler}\r\n                  />\r\n              </div>\r\n              <div className={`${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`}>\r\n\r\n\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                      type=\"password\"\r\n                      id=\"password\"\r\n                      value={enteredPassword}\r\n                      onChange={passwordChangeHandler}\r\n                      onBlur={validatePasswordHandler}\r\n                  />\r\n              </div>\r\n              <div className={classes.actions}>\r\n                  <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\r\n                      Login\r\n                  </Button>\r\n              </div>\r\n          </form>\r\n      </Card>\r\n  \r\n  )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}